// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OpinionesPeliculasPWA.Models.Entities;

#nullable disable

namespace OpinionesPeliculasPWA.Migrations
{
    [DbContext(typeof(OpinionespeliculasContext))]
    partial class OpinionespeliculasContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("latin1_swedish_ci")
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "latin1");

            modelBuilder.Entity("OpinionesPeliculasPWA.Models.Entities.Opiniones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("IdPelicula")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int(11)");

                    b.Property<string>("Opinion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("opiniones", (string)null);
                });

            modelBuilder.Entity("OpinionesPeliculasPWA.Models.Entities.Peliculas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("peliculas", (string)null);
                });

            modelBuilder.Entity("OpinionesPeliculasPWA.Models.Entities.Tokens", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int(11)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdUsuario" }, "fktokenus_idx");

                    b.ToTable("tokens", (string)null);
                });

            modelBuilder.Entity("OpinionesPeliculasPWA.Models.Entities.Usuarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("IdRol")
                        .HasColumnType("int(11)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("usuarios", (string)null);
                });

            modelBuilder.Entity("OpinionesPeliculasPWA.Models.Entities.Tokens", b =>
                {
                    b.HasOne("OpinionesPeliculasPWA.Models.Entities.Usuarios", "IdUsuarioNavigation")
                        .WithMany("Tokens")
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("fktokenus");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("OpinionesPeliculasPWA.Models.Entities.Usuarios", b =>
                {
                    b.Navigation("Tokens");
                });
#pragma warning restore 612, 618
        }
    }
}
